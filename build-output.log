Sending build context to Docker daemon  137.6MB
Step 1/31 : FROM emscripten/emsdk:2.0.9
2.0.9: Pulling from emscripten/emsdk
bb79b6b2107f: Already exists
bfadc1a025e1: Already exists
08ff166f7769: Already exists
337f57ffabd4: Already exists
e08b0b985f3b: Already exists
Digest: sha256:cd6cc7a7772c395a88f0c417bd6d46a16a5aabb8e1715fbb77859c995b604ec2
Status: Downloaded newer image for emscripten/emsdk:2.0.9
 ---> 18d6be8c3047
Step 2/31 : RUN apt update -y
 ---> Using cache
 ---> 6df769e0cd94
Step 3/31 : RUN apt install -y build-essential python3 python-pip git cmake bash curl npm
 ---> Using cache
 ---> 24bc8da47706
Step 4/31 : WORKDIR /python/
 ---> Using cache
 ---> e716b34c736c
Step 5/31 : RUN   apt install -y     build-essential     zlib1g-dev     libncurses5-dev     libgdbm-dev     libnss3-dev     libssl-dev     libsqlite3-dev     libreadline-dev     libffi-dev     curl     libbz2-dev     python3-setuptools
 ---> Using cache
 ---> 891c94d8a3b2
Step 6/31 : WORKDIR /clang/
 ---> Using cache
 ---> fc9886cd8b4c
Step 7/31 : RUN curl -SL https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz  | tar -xJC . &&  mv clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04 clang_11 &&  PATH=/clang/clang_11/bin:$PATH &&  LD_LIBRARY_PATH=/clang/clang_11/lib:$LD_LIBRARY_PATH
 ---> Using cache
 ---> 578bc066f4b1
Step 8/31 : RUN PATH=/clang/clang_11/lib:$PATH
 ---> Using cache
 ---> f173468af1dd
Step 9/31 : RUN LD_LIBRARY_PATH=/clang/clang_11/lib:$LD_LIBRARY_PATHLD_LIBRARY_PATH
 ---> Using cache
 ---> 7e0102126d8d
Step 10/31 : RUN   cd clang_11/lib &&   ln -s libclang.so.11 libclang-11.so
 ---> Using cache
 ---> ccdd66944bce
Step 11/31 : RUN apt install -y libncurses5 libncurses6 libncurses5-dev libncursesw5-dev
 ---> Using cache
 ---> 06fa26cab065
Step 12/31 : RUN apt install -y git autoconf gperf libtool gettext autopoint pkg-config
 ---> Using cache
 ---> 338677391ebf
Step 13/31 : WORKDIR /freetype/
 ---> Using cache
 ---> 4dc8734927a2
Step 14/31 : RUN   git clone https://git.savannah.nongnu.org/git/freetype/freetype2.git .
 ---> Using cache
 ---> 044e85ac5675
Step 15/31 : WORKDIR /expat/
 ---> Using cache
 ---> 1191bcf337cb
Step 16/31 : RUN   git clone https://github.com/libexpat/libexpat.git . &&   git checkout R_2_2_10
 ---> Using cache
 ---> 6dd3bd923c60
Step 17/31 : WORKDIR /expat/expat/
 ---> Using cache
 ---> 55f1919915b0
Step 18/31 : RUN   ./buildconf.sh &&   emconfigure ./configure --enable-static=yes --enable-shared=no &&   emmake make
 ---> Using cache
 ---> 62f8b30a8109
Step 19/31 : WORKDIR /fontconfig/
 ---> Using cache
 ---> 848a6653bf5d
Step 20/31 : RUN   git clone https://gitlab.freedesktop.org/fontconfig/fontconfig.git .
 ---> Using cache
 ---> 0f0cddf4cfdb
Step 21/31 : RUN   CFLAGS="-D__linux__ -I/freetype/include" LDFLAGS="-s USE_FREETYPE=1" FREETYPE_CFLAGS=" " FREETYPE_LIBS=" " emconfigure ./autogen.sh --with-expat-includes=/expat/expat/lib/ --with-expat-lib=/expat/expat/lib/.libs/ --enable-static=yes --enable-shared=no &&   emmake make
 ---> Using cache
 ---> f0682cc0cc14
Step 22/31 : RUN   apt install -y gnupg &&   curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - &&   echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list &&   apt update && apt install -y yarn
 ---> Using cache
 ---> c9f15cb5a57d
Step 23/31 : WORKDIR /rapidjson/
 ---> Using cache
 ---> 3694411770bf
Step 24/31 : RUN   git clone https://github.com/Tencent/rapidjson.git .
 ---> Using cache
 ---> d4407393c588
Step 25/31 : WORKDIR /occt/
 ---> Using cache
 ---> 3db973297fb2
Step 26/31 : RUN   curl "https://git.dev.opencascade.org/gitweb/?p=occt.git;a=snapshot;h=628c0211d53c7fe1036a85e7a7b2b067c9c50f7a;sf=tgz" -o occt.tar.gz &&   tar -xvf occt.tar.gz &&   cd occt-628c021/
 ---> Using cache
 ---> cdd60caba941
Step 27/31 : RUN   curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash &&   apt-get install git-lfs &&   git lfs install
 ---> Using cache
 ---> 8f334ad36cd8
Step 28/31 : RUN   apt remove libgcc-8-dev -y &&   echo "deb http://ftp.us.debian.org/debian testing main contrib non-free" >> /etc/apt/sources.list &&   apt update -y &&   apt install build-essential -y &&   pip3 install clang
 ---> Using cache
 ---> ad91c0b915ec
Step 29/31 : RUN   mkdir /opencascade.js/ &&   mkdir /opencascade.js/build/
 ---> Using cache
 ---> 7192ef1f79e8
Step 30/31 : WORKDIR /opencascade.js/src/
 ---> Using cache
 ---> 279fb1798615
Step 31/31 : ENTRYPOINT [ "./main.py" ]
 ---> Using cache
 ---> c8c5d29f9a1e
Successfully built c8c5d29f9a1e
Successfully tagged my_awesome_image:latest
