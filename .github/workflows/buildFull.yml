name: Build OpenCascade.js

on:
  workflow_dispatch:
    inputs:
      release:
        type: boolean
        description: Release?
      multithreaded:
        type: boolean
        description: Include Multi-Threaded build?

jobs:
  build:
    name: Build OpenCascade.js
    runs-on: [self-hosted, full]
    timeout-minutes: 10000
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Generate version number
        id: version
        run: |
          if ${{ github.event.inputs.release }}
          then
            export NEW_OPENCASCADEJS_VERSION=$(node -p -e "require('./package.json').version.split('-')[0]")-beta.$(git log --pretty=format:'%h' -n 1)
            echo "::set-output name=version::$NEW_OPENCASCADEJS_VERSION"
            echo "::set-output name=tags::${{ secrets.DOCKER_IMAGE_NAME }}:$NEW_OPENCASCADEJS_VERSION,${{ secrets.DOCKER_IMAGE_NAME }}:latest"
          else
            echo "::set-output name=tags::${{ secrets.DOCKER_IMAGE_NAME }}:latest"
          fi

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build OpenCascade.js Docker Image
        timeout-minutes: 10000
        run: |
          docker pull ${{ secrets.DOCKER_IMAGE_NAME }}:latest || true
          docker pull ${{ secrets.DOCKER_IMAGE_NAME }}:staging || true
          docker build --build-arg threading=single-threaded -t ${{ secrets.DOCKER_IMAGE_NAME }} --cache-from ${{ secrets.DOCKER_IMAGE_NAME }}:latest --cache-from ${{ secrets.DOCKER_IMAGE_NAME }}:staging .

      - name: Push to Docker Hub (staging)
        run: |
          docker tag ${{ secrets.DOCKER_IMAGE_NAME }} ${{ secrets.DOCKER_IMAGE_NAME }}:staging
          docker push ${{ secrets.DOCKER_IMAGE_NAME }}:staging

      - name: Build OpenCascade.js Docker Image (Multi-Threaded)
        if: ${{ github.event.inputs.multithreaded }}
        timeout-minutes: 10000
        run: |
          docker pull ${{ secrets.DOCKER_IMAGE_NAME }}:latest-multi-threaded || true
          docker pull ${{ secrets.DOCKER_IMAGE_NAME }}:staging-multi-threaded || true
          docker build --build-arg threading=multi-threaded -t ${{ secrets.DOCKER_IMAGE_NAME }}:latest-multi-threaded --cache-from ${{ secrets.DOCKER_IMAGE_NAME }}:latest-multi-threaded --cache-from ${{ secrets.DOCKER_IMAGE_NAME }}:staging-multi-threaded .

      - name: Push to Docker Hub (Staging, Multi-Threaded)
        run: |
          docker tag ${{ secrets.DOCKER_IMAGE_NAME }}:latest-multi-threaded ${{ secrets.DOCKER_IMAGE_NAME }}:staging-multi-threaded
          docker push ${{ secrets.DOCKER_IMAGE_NAME }}:staging-multi-threaded

      - name: Build OpenCascade.js Full Module
        timeout-minutes: 10000
        run: |
          cd dist
          docker run \
            -v $(pwd):/src \
            -u $(id -u):$(id -g) \
            ${{ secrets.DOCKER_IMAGE_NAME }} \
            /opencascade.js/builds/opencascade.full.yml

      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./dist/

      - uses: actions/setup-node@v2
        with:
          node-version: '15'

      - name: Run tests
        run: |
          cd test
          npm install
          npm run test
          cd ..

      - name: Push to Docker Hub
        if: ${{ github.event.inputs.release }}
        run: |
          docker push ${{ secrets.DOCKER_IMAGE_NAME }}
          docker tag ${{ secrets.DOCKER_IMAGE_NAME }} ${{ secrets.DOCKER_IMAGE_NAME }}:${{ steps.version.outputs.version }}
          docker push ${{ secrets.DOCKER_IMAGE_NAME }}:${{ steps.version.outputs.version }}

      - name: Push to Docker Hub (Multi-Threaded)
        if: ${{ github.event.inputs.release && github.event.inputs.multithreaded }}
        run: |
          docker push ${{ secrets.DOCKER_IMAGE_NAME }}:latest-multi-threaded
          docker tag ${{ secrets.DOCKER_IMAGE_NAME }}:latest-multi-threaded ${{ secrets.DOCKER_IMAGE_NAME }}:latest-multi-threaded-${{ steps.version.outputs.version }}
          docker push ${{ secrets.DOCKER_IMAGE_NAME }}:latest-multi-threaded-${{ steps.version.outputs.version }}

      - name: Git and NPM config
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          npm set //registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}

      - name: Publish new beta version to NPM
        if: ${{ github.event.inputs.release }}
        run: |
          npm version ${{ steps.version.outputs.version }} --force
          npm publish --tag=beta

      - name: Git pull
        run: |
          git pull

      - name: Push Changes to branch
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
