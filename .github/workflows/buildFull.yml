name: Build OpenCascade.js

on:
  push

jobs:
  build:
    name: Build OpenCascade.js
    if: ${{ contains(github.event.head_commit.message, 'ci_full') }}
    runs-on: [self-hosted, full]
    timeout-minutes: 10000
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Generate version number
        id: version
        run: |
          if ${{ github.ref == 'refs/heads/beta' }}
          then
            export NEW_OPENCASCADEJS_VERSION=$(node -p -e "require('./package.json').version.split('-')[0]")-beta.$(git log --pretty=format:'%h' -n 1)
            echo "::set-output name=version::$NEW_OPENCASCADEJS_VERSION"
            echo "::set-output name=tags::${{ secrets.DOCKER_IMAGE_NAME }}:$NEW_OPENCASCADEJS_VERSION,${{ secrets.DOCKER_IMAGE_NAME }}:latest"
          else
            echo "::set-output name=tags::${{ secrets.DOCKER_IMAGE_NAME }}:latest"
          fi

      - name: Build OpenCascade.js Docker Image
        if: ${{ contains(github.event.head_commit.message, 'ci_full') }}
        timeout-minutes: 10000
        run: |
          docker pull ${{ secrets.DOCKER_IMAGE_NAME }}
          docker build -t ${{ secrets.DOCKER_IMAGE_NAME }} --cache-from ${{ secrets.DOCKER_IMAGE_NAME }} .
          docker tag ${{ secrets.DOCKER_IMAGE_NAME }} ${{ steps.version.outputs.version }}

      - name: Build OpenCascade.js Full Module
        timeout-minutes: 10000
        if: ${{ contains(github.event.head_commit.message, 'ci_full') }}
        run: |
          cd dist
          docker run \
            -v $(pwd)/..:/src \
            -u $(id -u):$(id -g) \
            ${{ secrets.DOCKER_IMAGE_NAME }} \
            /src/builds/opencascade.full.yml
          cd ..
          mv opencascade.full.* dist

      - uses: actions/upload-artifact@v2
        if: ${{ contains(github.event.head_commit.message, 'ci_full') }}
        with:
          name: dist
          path: ./dist/

      - uses: actions/setup-node@v2
        with:
          node-version: '15'

      - name: Run tests
        if: ${{ contains(github.event.head_commit.message, 'ci_full') }}
        run: |
          cd test
          npm install
          npm run test
          cd ..

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        if: ${{ github.ref == 'refs/heads/beta' && contains(github.event.head_commit.message, 'ci_full') }}
        run: |
          docker push ${{ secrets.DOCKER_IMAGE_NAME }}

      - name: Git and NPM config
        if: ${{ github.ref == 'refs/heads/beta' && contains(github.event.head_commit.message, 'ci_full') }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          npm set //registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}

      - name: Publish new beta version to NPM
        if: ${{ github.ref == 'refs/heads/beta' && contains(github.event.head_commit.message, 'ci_full') }}
        run: |
          npm version ${{ steps.version.outputs.version }} --force
          npm publish --tag=beta

      - name: Push Changes to branch
        uses: ad-m/github-push-action@master
        if: ${{ github.ref == 'refs/heads/beta' && contains(github.event.head_commit.message, 'ci_full') }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  test:
    name: Run tests
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'ci_full') }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - uses: actions/setup-node@v2
        with:
          node-version: '15'

      - name: Run tests
        if: ${{ !contains(github.event.head_commit.message, 'ci_full') }}
        run: |
          cd test
          npm install
          npm install opencascade.js@beta
          npm run test
  