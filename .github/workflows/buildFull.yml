name: Build OpenCascade.js

on:
  push

jobs:
  build:
    name: Build OpenCascade.js
    if: ${{ contains(github.event.head_commit.message, 'ci_full') }}
    runs-on: [self-hosted, full]
    timeout-minutes: 10000
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # - name: Generate version number
      #   id: version
      #   run: |
      #     if ${{ github.ref == 'refs/heads/beta' }}
      #     then
      #       export NEW_OPENCASCADEJS_VERSION=$(node -p -e "require('./package.json').version.split('-')[0]")-beta.$(git log --pretty=format:'%h' -n 1)
      #       echo "::set-output name=version::$NEW_OPENCASCADEJS_VERSION"
      #       echo "::set-output name=tags::$NEW_OPENCASCADEJS_VERSION,latest"
      #     else
      #       echo "::set-output name=tags::latest"
      #     fi

      # - name: Build OpenCascade.js Docker Image
      #   uses: whoan/docker-build-with-cache-action@v5
      #   if: ${{ contains(github.event.head_commit.message, 'ci_full') }}
      #   timeout-minutes: 10000
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     image_name: ${{ secrets.DOCKER_IMAGE_NAME }}
      #     pull_image_and_stages: true
      #     push_image_and_stages: ${{ github.ref == 'refs/heads/beta' && contains(github.event.head_commit.message, 'ci_full') }}
      #     image_tag: ${{ steps.version.outputs.tags }}

      - name: debug
        run: |
          docker pull donalffons/opencascade.js

      - name: Build OpenCascade.js Full Module
        timeout-minutes: 10000
        if: ${{ contains(github.event.head_commit.message, 'ci_full') }}
        env:
          DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }}
        run: |
          cd dist
          docker run \
            -v $(pwd):/src \
            -u $(id -u):$(id -g) \
            $DOCKER_IMAGE_NAME \
            /opencascade.js/src/builds/opencascade.full.yml
          cd ..

      - uses: actions/upload-artifact@v2
        if: ${{ contains(github.event.head_commit.message, 'ci_full') }}
        with:
          name: dist
          path: ./dist/

      - name: Test
        if: ${{ contains(github.event.head_commit.message, 'ci_full') }}
        env:
          NODE_OPTIONS: --experimental-vm-modules
        run: |
          node --version
          npm --version
          cd test
          npm install
          npm run test

      # - name: Git and NPM config
      #   if: ${{ github.ref == 'refs/heads/beta' && contains(github.event.head_commit.message, 'ci_full') }}
      #   run: |
      #     git config --local user.email "action@github.com"
      #     git config --local user.name "GitHub Action"
      #     npm set //registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}

      # - name: Publish new beta version to NPM
      #   if: ${{ github.ref == 'refs/heads/beta' && contains(github.event.head_commit.message, 'ci_full') }}
      #   run: |
      #     npm version ${{steps.version.outputs.version}} --force
      #     npm publish --tag=beta

      # - name: Push Changes to branch
      #   uses: ad-m/github-push-action@master
      #   if: ${{ github.ref == 'refs/heads/beta' && contains(github.event.head_commit.message, 'ci_full') }}
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: ${{ github.ref }}

  test:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'ci_full') }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Test
        if: ${{ !contains(github.event.head_commit.message, 'ci_full') }}
        run: |
          node --version
          npm --version
          cd test
          npm install
          npm install opencascade.js@beta
          NODE_OPTIONS=--experimental-vm-modules npm run test
  