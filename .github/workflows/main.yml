name: opencascade.js - Build Bindings

on:
  push

jobs:
  build:
    name: Build OpenCascade Bindings
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Attempt to Load Build Cache
      - name: Cache Intermediate Build Products
        id: cache-build
        uses: actions/cache@v2
        env:
          cache-name: cache-build-intermediates
        with:
          path: ./build
          key: ${{ runner.os }}-build-${{ env.cache-name }}-

      # Attempt to Load Node Module Cache
      - name: Cache Intermediate Node Products
        id: cache-build-2
        uses: actions/cache@v2
        env:
          cache-name: cache-node-intermediates
        with:
          path: ./node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-

      # Attempt to Load Node Module Cache
      - name: Cache Intermediate Emscripten Products
        id: cache-build-3
        uses: actions/cache@v2
        env:
          cache-name: cache-emscripten-intermediates
        with:
          path: ./emscripten-cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-

      # Attempt to Load Node Module Cache
      - name: Cache Intermediate Dist Products
        id: cache-build-4
        uses: actions/cache@v2
        env:
          cache-name: cache-dist-intermediates
        with:
          path: ./dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Build OpenCascade.js Docker Image
        uses: whoan/docker-build-with-cache-action@v5
        with:
          registry: docker.pkg.github.com
          username: zalo
          password: "${{ secrets.GITHUB_TOKEN }}"
          image_name: opencascade.js
          image_tag: opencascade.js

      # Build the docker container
      - name: Build OpenCascade.js Bindings
        run: |
          docker run \
            -v "$(pwd)/build/":"/opencascade/build/" \
            -v "$(pwd)/node_modules/":"/opencascade/node_modules/" \
            -v "$(pwd)/dist/":"/opencascade/dist/" \
            -v "$(pwd)/emscripten-cache/":"/emscripten/upstream/emscripten/cache/" \
            zalo/opencascade.js

      # Debug
      - name: Debug Print Files
        run: |
          ls
          ls build
          ls dist
          ls emscripten-cache
          ls node_modules

      # Upload the build results in-case...
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        #if: ${{ always() }}
        with:
          name: Build Products
          path: dist
